services:
  # --- MICROSERVIÇOS BACKEND ---
  ms-carrinho:
    build:
      context: backend/ms-carrinho
    container_name: ms_carrinho
    restart: always
    networks:
      - lps_network_local
    environment:
      - DATABASE_URL=postgresql://lps_carrinho_user:BYGO4ZfFm8J6CrIV8R7dgUjcjUv0WcOm@dpg-d3vr2ea4d50c73ak8a60-a.oregon-postgres.render.com/lps_carrinho
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.ms-carrinho.rule=Host(`app.localhost`) && PathPrefix(`/api/carrinho`)"
      - "traefik.http.routers.ms-carrinho.entrypoints=web"
      - "traefik.http.middlewares.strip-carrinho.stripprefix.prefixes=/api/carrinho"
      - "traefik.http.routers.ms-carrinho.middlewares=strip-carrinho,cors-header"
      - "traefik.http.services.ms-carrinho.loadbalancer.server.port=8002"

  ms-catalogo:
    build:
      context: backend/ms-catalogo
    container_name: ms_catalogo
    restart: always
    networks:
      - lps_network_local
    environment:
      - DATABASE_URL=postgresql://lps_catalogo_user:tExbtivkJOxm4RUcryNYkFdQrIdgpJEL@dpg-d3vpl9bipnbc739k3b1g-a.ohio-postgres.render.com/lps_catalogo
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.ms-catalogo.rule=Host(`app.localhost`) && PathPrefix(`/api/catalogo`)"
      - "traefik.http.routers.ms-catalogo.entrypoints=web"
      - "traefik.http.middlewares.strip-catalogo.stripprefix.prefixes=/api/catalogo"
      - "traefik.http.routers.ms-catalogo.middlewares=strip-catalogo,cors-header"
      - "traefik.http.services.ms-catalogo.loadbalancer.server.port=8001"

  ms-frete:
    build:
      context: backend/ms-frete
    container_name: ms_frete
    restart: always
    networks:
      - lps_network_local
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.ms-frete.rule=Host(`app.localhost`) && PathPrefix(`/api/frete`)"
      - "traefik.http.routers.ms-frete.entrypoints=web"
      - "traefik.http.middlewares.strip-frete.stripprefix.prefixes=/api/frete"
      - "traefik.http.routers.ms-frete.middlewares=strip-frete,cors-header"
      - "traefik.http.services.ms-frete.loadbalancer.server.port=8003"

  # --- SERVIÇO DE PEDIDO/CHECKOUT (ms-pedido) ---
  # Orquestrador principal do checkout (Carrinho -> Estoque -> Pagamento -> Limpa Carrinho)
  ms-pedido:
    build:
      context: backend/ms-pedido
    container_name: ms_pedido
    restart: always
    networks:
      - lps_network_local
    environment:
      # URLs internas dos microserviços (usando nomes dos containers e portas internas)
      - CARRINHO_SERVICE_URL=http://ms_carrinho:8002/api/carrinho
      - PAGAMENTO_SERVICE_URL=http://ms_pagamento:8004/api/pagamento
      - ESTOQUE_SERVICE_URL=http://ms_estoque:8006/api/estoque
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.ms-pedido.rule=Host(`app.localhost`) && PathPrefix(`/api/pedido`)"
      - "traefik.http.routers.ms-pedido.entrypoints=web"
      - "traefik.http.middlewares.strip-pedido.stripprefix.prefixes=/api/pedido"
      - "traefik.http.routers.ms-pedido.middlewares=strip-pedido,cors-header"
      - "traefik.http.services.ms-pedido.loadbalancer.server.port=8005" # Porta do FastAPI
    depends_on:
      # Garante que os serviços de que ele depende iniciem primeiro
      - ms-carrinho
      - ms-pagamento
      - ms-estoque

  # ---  SERVIÇO DE RECOMENDAÇÃO (ms-recomendacao) ---
  ms-recomendacao:
    build:
      context: backend/ms-recomendacao
    container_name: ms_recomendacao
    restart: always
    networks:
      - lps_network_local
    environment:
      # URLs internas dos microserviços (usando nomes dos containers e portas internas)
      - PEDIDO_SERVICE_URL=http://ms_pedido:8005/api/pedido
      - CATALOGO_SERVICE_URL=http://ms_catalogo:8001/api/catalogo
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.ms-recomendacao.rule=Host(`app.localhost`) && PathPrefix(`/api/recomendacao`)"
      - "traefik.http.routers.ms-recomendacao.entrypoints=web"
      - "traefik.http.middlewares.strip-recomendacao.stripprefix.prefixes=/api/recomendacao"
      - "traefik.http.routers.ms-recomendacao.middlewares=strip-recomendacao,cors-header"
      - "traefik.http.services.ms-recomendacao.loadbalancer.server.port=8007" # Porta do FastAPI
    depends_on:
      # Depende do Pedido para histórico e do Catálogo para detalhes do produto
      - ms-pedido
      - ms-catalogo
  # --- FRONTEND ---
  frontend:
    build:
      context: frontend/app-ecommerce
    container_name: frontend
    restart: always
    networks:
      - lps_network_local
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.frontend.rule=Host(`app.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.middlewares=cors-header"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"

  # --- GATEWAY ---
  traefik:
    image: traefik:v3.0
    container_name: traefik-local
    command:
      # --- Pontos de Entrada ---
      - "--entrypoints.web.address=:8080"
      - "--entrypoints.dashboard.address=:8081"
      # --- Provedor Docker ---
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # --- Dashboard e API ---
      - "--api.dashboard=true"
      - "--api.insecure=true"
      # --- Log ---
      - "--log.level=INFO"
    ports:
      - "8888:8080"  # API Gateway (web)
      - "8181:8081"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lps_network_local
  # SERVIÇO DE PAGAMENTO
  ms-pagamento:
    build:
      context: ./backend/ms-pagamento
      dockerfile: Dockerfile
    image: ecommerce-spl/ms-pagamento
    container_name: ms-pagamento
    ports:
      - "8004:8004" # Porta interna:externa
    environment:
      # TRAEFIK Tags (para o Traefik rotear as requisições)
      - "TRAEFIK_TAGS=traefik.http.routers.ms-pagamento.rule=PathPrefix(`/api/pagamento`)"
    labels:
      # Configuração do Traefik para o serviço de pagamento
      - "traefik.enable=true"
      - "traefik.http.routers.ms-pagamento.rule=PathPrefix(`/api/pagamento`)"
      - "traefik.http.routers.ms-pagamento.entrypoints=web"
      - "traefik.http.services.ms-pagamento.loadbalancer.server.port=8004"
    networks:
      - lps_network_local 
    # A dependência do Consul garante que ele se registre no momento certo
    depends_on:
      - consul-local
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=lps_network_local"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
      - "traefik.http.routers.dashboard.service=api@internal"
      # --- DEFINIÇÃO DO MIDDLEWARE CORS AGORA AQUI ---
      - "traefik.http.middlewares.cors-header.headers.accesscontrolalloworigins=http://app.localhost:8888,http://localhost:5173"
      - "traefik.http.middlewares.cors-header.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-header.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors-header.headers.accesscontrolallowcredentials=true"

networks:
  lps_network_local:
    driver: bridge
